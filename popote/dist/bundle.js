(()=>{"use strict";const e={props:[],data:function(){return{currentDateTime:""}},mounted(){this.updateDateTime(),setInterval(this.updateDateTime,1e3)},template:"        <div>          <h1>Popote (vos meilleures recettes)</h1>          <p>Nous somme le {{currentDateTime}}</p>          <p>Ce site permet de consulter des recettes de cuisine et enregistrer vos propres recettes</p>          <p>Le bandeau en haut de cette page permet d'acceder aux différetes pages de ce site : </p>          <ul>          <li>Acceuil : cette page (présentation du site)</li>          <li>Recettes : accès a l'ensemble des recettes disponibles</li>          <li>Mon compte : gestion de votre conpte (connexion / deconnexion / données personnelles</li>          </ul>        </div>      ",methods:{updateDateTime(){const e=new Date;this.currentDateTime=e.toLocaleString()}}};var t=!1,n=null;const i={props:[],data:function(){return{currentDateTime:"",login:null,modePageCompte:"connexion",login:"non connecté",passPhrase:"sldjreioenos,soa",typeUser:"",password:"",repetPassword:"",newLogin:"",newPassword:"",passwordCrypte:"",repetPassword:"",newMailAddress:"",adresseMail:"",user:n,connected:t,message:""}},mounted(){this.updateDateTime(),setInterval(this.updateDateTime,1e3)},template:'        <div>          <h1>Gestion de votre compte</h1>          <p><span v-if="connected">Bonjour {{user.nom}}.</span> Nous somme le {{currentDateTime}}</p>          <p>Cette page permet de gérer votre compte :             <button @click="changeMode(\'creeCompte\')">création de compte</button> /             <span v-if="connected"> <button @click="changeMode(\'suppCompte\')">suppression de compte</button> / </span>            <button @click="changeMode(\'connexion\')">connexion</button>            <span v-if="connected"> /               <button @click="changeMode(\'deconnexion\')"> déconnexion</button> /               <button @click="changeMode(\'infosPerso\')">infos personnelles</button>            </span>          </p>          <div v-if="modePageCompte === \'creeCompte\'">            <h2> Création de votre compte </h2>            <table>              <tr>                <td>Saisissez un nom d\'utilisateur</td>                <td> <input v-model="newLogin"> </td>              </tr>              <tr>                <td>choisissez votre mot de passe</td>                <td> <input v-model="newPassword" type="password"> </td>              </tr>              <tr>                <td>repetez votre mot de passe</td>                <td> <input v-model="repetPassword" type="password"> </td>              </tr>              <tr>                <td>adresse mail</td>                <td> <input v-model="newMailAddress"> </td>              </tr>            </table>            <button @click="creeCompte()">Valider</button>          </div>          <div v-else-if="modePageCompte === \'suppCompte\'">            <h2> Suppression de votre compte </h2>            <p>Souhaitez vous vraiment supprimer votre compte ?</p>            <table>              <tr>                <td>Mot de passe</td>                <td> <input v-model="newPassword" type="password"> </td>              </tr>            </table>            <button @click="suppCompte()">Supprimer le compte</button>          </div>          <div v-else-if="modePageCompte === \'connexion\'">            <h2> Connexion a votre compte </h2>            <table>              <tr>                <td>Nom d\'utilisateur</td>                <td> <input v-model="newLogin"> </td>              </tr>              <tr>                <td>Mot de passe</td>                <td> <input v-model="newPassword" type="password"> </td>              </tr>            </table>            <button @click="connecte()">Valider</button>            <div>              {{message}}            </div>          </div>          <div v-else-if="modePageCompte === \'deconnexion\'">            <h2> deconnexion a votre compte </h2>            <p>Souhaitez vous vraiment vous deconnecter ?</p>            <button @click="deconnecte()">deconnexion du compte</button>          </div>          <div v-else-if="modePageCompte === \'infosPerso\'">            <h2> Informations personnelles de votre compte </h2>            <table>              <tr>                <td>Identifiant</td>                <td>{{user.nom}}</td>              </tr>              <tr>                <td>adresse mail</td>                <td>{{user.email}}</td>              </tr>            </table>          </div>        </div>      ',methods:{updateDateTime(){const e=new Date;this.currentDateTime=e.toLocaleString()},changeMode(e){console.log("changement de mode : "+e),this.modePageCompte=e},creeCompte(e,t,n){console.log("création d'un compte"),this.requeteUser("creation",this.newLogin,this.newPassword,this.repetPassword,this.newMailAddress)},suppCompte(){console.log("suppression du compte "+this.user),this.requeteUser("suppCompte",null,this.newPassword,"","")},deconnecte(){console.log("deconexion du compte "+this.user),n=null,this.user=null,t=!1,this.connected=!1},connecte(){console.log("conexion au compte "+this.newLogin),this.requeteUser("connexion",this.newLogin,this.newPassword,"","")},encrypt(e){return this.passPhrase,e},decrypt(e){const t=this.passPhrase;return CryptoJS.AES.decrypt(e,t).toString(CryptoJS.enc.Utf8),e},requeteUser(e,i,s,o,d){const c={type:e,user:i,pwd:this.encrypt(s),pwdVerif:this.encrypt(o),email:d},r={method:"POST",body:JSON.stringify(c)};fetch("http://localhost:3000/requeteUser",r).then((e=>e.json())).then((e=>{let s=e.status;console.log("compte.js => status = "+s),"OK"==s?(e.message,n=e.user,this.typeUser=n.role,this.user=n,t=!0,this.connected=!0,"administrateur"==this.typeUser&&console.log("administarteur connecté")):console.log("echec de la connexion de "+i),this.message=e.message})).catch((e=>{console.error(e)}))},isConnected:()=>n,isAdmin(){return"administrateur"==this.typeUser}}},s={props:[],data:function(){return{currentDateTime:"",indexRecette:0,modeAffichage:"listeRecettes",auteur:null,titre:null,typeRecette:null,description:null,realisation:null,ingredients:null,ingredient:"{[null]}",index:0,nbRecettes:0,nbRecettesParPage:10,idxDebutListeRecettes:0,listeRecettes:[],recette:"{[null]}",recettesPrivees:!1,userName:null,userConnected:!1,typeRecetteSelected:"Tout"}},mounted(){this.updateDateTime(),setInterval(this.updateDateTime,1e3),this.getNbRecettes()},template:"      <div>        <span v-if=\"modeAffichage == 'listeRecettes'\">          <listeRecettes/>        </span>        <span v-if=\"modeAffichage == 'afficheRecette'\">          <afficheRecette/>        </span>        <span v-if=\"modeAffichage == 'editeRecette'\">          <editeRecette/>        </span>        <span v-if=\"modeAffichage == 'creationRecette'\">          <creationRecette/>        </span>      </div>    ",methods:{updateDateTime(){const e=new Date;this.currentDateTime=e.toLocaleString()},setModeListe(e){console.log("recettes.js => setmodeListe : "+e),this.modeListe=e,this.$forceUpdate()},incrementeIndex(){this.index++,this.index>=this.nbRecettes&&(this.index=this.nbRecettes-1),this.loadRecette(this.index),console.log("recette.js : incrementeIndex : "+this.index)},decrementeIndex(){this.index--,this.index<=0&&(this.index=0),this.loadRecette(this.index),console.log("recette.js : decrementeIndex : "+this.index)},getNbRecettes(){fetch("http://localhost:3000/getNbRecettes").then((e=>e.json())).then((e=>{this.nbRecettes=e.nbRecettes})).catch((e=>{console.error(e)}))},switchModeEdition(){this.modeEdition=!this.modeEdition},updateRecette(){console.log("recettes.js : updateRecette => TODO"),this.switchModeEdition()},changeTypeSelect(e){console.log("recettes.js (changeTypeSelect) => TODO"),this.typeRecetteSelected=e.target.value,console.log("type selectionné : "+this.typeRecetteSelected),this.loadListeRecettes()},loadListeRecettes(){console.log("recettes.js => loadListeRecettes : ");var e=this.recettesPrivees,t=this.idxDebutListeRecettes,n=this.nbRecettesParPage,i=this.userName,s=this.typeRecetteSelected;fetch("http://localhost:3000/getListeRecettes?index="+t+"&nb="+n+"&user="+i+"&prive="+e+"&type="+s).then((e=>e.json())).then((e=>{this.listeRecettes=e})).catch((e=>{console.error(e),console.log("erreur lors du chargement de la liste de recettes"+this.idxDebutListeRecettes)}))},loadRecette(e){console.log("recette.js => loadRecette "+e),fetch("http://localhost:3000/getRecette?index="+e).then((e=>e.json())).then((e=>{this.recette=e,console.log("listeRecette.js => recette "+JSON.stringify(this.recette)),this.modeAffichage="afficheRecette"})).catch((e=>{console.error(e),this.indexRecette--,console.log("chargement de la recette bidon "+this.indexRecette),this.titre="fausse recette numero "+this.indexRecette,this.description="bla bla bla"}))}}},o={props:[],data:function(){return{nbRecettes:0,nbRecettesParPage:10,idxDebutListeRecettes:0,recettesPrivees:!1,userConnected:!1,typeRecetteSelected:"Tout"}},mounted(){this.$parent.loadListeRecettes(),this.updateConnected()},template:'    <h1>Liste des recettes</h1>    <p>Parcourez la liste des recettes disponibles et selectionnez celle que vous voulez préparer</p>    <span v-if="userConnected" >      <input @change="loadListeRecettes" type="checkbox" v-model="recettesPrivees"> Mes recettes (visualisation de vos créations)    </span>          <p>        Liste des recettes : type de recette         <select @change="$parent.changeTypeSelect($event)" name= "typeRecetteSelected" id="typeRecetteSelected">          <option value="tout">Tout</option>          <option value="Entree">Entrée</option>          <option value="Plat">Plat</option>          <option value="Dessert">Dessert</option>        </select>      </p>      <div>        <table>          <tr>            <th>titre</th>            <th>type</th>            <th>description</th>          </tr>          <tr v-for="(item, index) in $parent.listeRecettes">            <td @click="loadRecette(item.index)">{{item.titre}}</td>            <td>{{item.type}}</td>            <td>{{item.description}}</td>          </tr>        </table>        <button @click="pagePrecedente">recettes précédentes</button>        <button @click="pageSuivante">recettes suivantes</button>      </div>    ',methods:{pageSuivante(){this.idxDebutListeRecettes+=this.nbRecettesParPage,this.idxDebutListeRecettes>=this.nbRecettes&&(this.idxDebutListeRecettes-=this.nbRecettesParPage),this.loadListeRecettes()},pagePrecedente(){this.idxDebutListeRecettes-=this.nbRecettesParPage,this.idxDebutListeRecettes<=0&&(this.idxDebutListeRecettes=0),this.loadListeRecettes()},changeTypeSelect(e){console.log("recettes.js (changeTypeSelect) => TODO"),this.typeRecetteSelected=e.target.value,console.log("type selectionné : "+this.typeRecetteSelected),this.loadListeRecettes()},updateConnected(){var e=i.methods.isConnected();null!=e&&(this.userName=e.nom,this.userConnected=!0)},loadRecette(e){console.log("listeRecette.js : listeRecette.js => loadRecette"),this.$parent.loadRecette(e)},loadListeRecette(){console.log("listeRecette.js : loadListeRecette.js => loadListeRecette"),this.$parent.recettesPrivees=this.recettesPrivees,this.$parent.auteur=this.auteur,this.$parent.loadListeRecette(index)}}},d={data:function(){return{recette:{},modeEdition:!1}},mounted(){this.loadDatas()},template:'      <h1>Recette</h1>      <p><button @click="setModeListe(\'listeRecettes\')">Retour à la liste de recettes</button></p>      <p>Recette numéro : <button @click="decrementeIndex">précédente</button>  {{$parent.index}}  <button @click="incrementeIndex">suivante</button></p>      <p></p>      <p v-if="$parent.recette.auteur">Cette recette est proposée par {{$parent.recette.auteur}}        <span v-if="$parent.recettesPrivees">           <button @click="switchModeEdition">Editer</button>          <span v-if="modeEdition"> Edition en cours .... </span>          </span>      </p>      <p></p>      <div>        <table>        \x3c!--tr>          <td>index</td>          <td>{{indexRecette}}</td>        </tr--\x3e        <tr>          <td>titre</td>          <td>{{$parent.recette.titre}}</td>        </tr>        <tr>          <td>type</td>          <td>{{$parent.recette.typeRecette}}</td>        </tr>          <tr>            <td>description</td>            <td>{{$parent.recette.description}}</td>          </tr>          <tr>            <td >ingredients</td>            <td >              <thead>                <th>nom</th>                <th>quantité</th>                <th>unité</th>              </thead>                <tr v-for="ingredient in $parent.recette.ingredients">                  <td>                    {{ingredient.nom}}                  </td>                  <td>                    {{ingredient.quantite}}                  </td>                  <td>                    {{ingredient.unite}}                  </td>              </tr>            </td>          </tr>          <tr>            <td>realisation</td>            <td>{{$parent.recette.realisation}}</td>          </tr>        </table>        <span v-if="modeEdition">          <button @click="updateRecette">Mise a jour</button>          <button @click="switchModeEdition">Annuler</button>        </span>      </div>    ',methods:{setModeListe(e){console.log("afficheRecette.js => setmodeListe : "+e),this.$parent.modeAffichage=e},loadDatas(){console.log("afficheRecette.js => loadDatas"),this.recette=this.$parent.recette,this.index=this.$parent.index,console.log("afficheRecette => loadDatas : recette ("+this.recette.titre+") recupérée")},loadRecette(e){return console.log("afficheRecette.js => loadRecette "+e),this.$parent.loadRecette(e),this.$parent.recette},incrementeIndex(){this.$parent.incrementeIndex(),this.recette=this.$parent.recette},decrementeIndex(){this.$parent.decrementeIndex(),this.recette=this.$parent.recette}}},c={props:[],data:function(){return{}},mounted(){},template:'      <p><button @click="setModeListe">Retour à la liste de recettes</button></p>      <p>Recette numéro : <button @click="decrementeIndex">précédente</button>  {{index}}  <button @click="incrementeIndex">suivante</button></p>      <p></p>      <p v-if="auteur">Cette recette est proposée par {{auteur}}        <span v-if="recettesPrivees">           <button @click="switchModeEdition">Editer</button>          <span v-if="modeEdition"> Edition en cours .... </span>          </span>      </p>      <p></p>      <div>        <table>        \x3c!--tr>          <td>index</td>          <td>{{indexRecette}}</td>        </tr--\x3e        <tr>          <td>titre</td>          <td>{{titre}}</td>        </tr>        <tr>          <td>type</td>          <td>{{typeRecette}}</td>        </tr>          <tr>            <td>description</td>            <td>{{description}}</td>          </tr>          <tr>            <td >ingredients</td>            <td >              <thead>                <th>nom</th>                <th>quantité</th>                <th>unité</th>              </thead>                <tr v-for="ingredient in ingredients">                  <td>                    {{ingredient.nom}}                  </td>                  <td>                    {{ingredient.quantite}}                  </td>                  <td>                    {{ingredient.unite}}                  </td>              </tr>            </td>          </tr>          <tr>            <td>realisation</td>            <td>{{realisation}}</td>          </tr>        </table>        <span v-if="modeEdition">          <button @click="updateRecette">Mise a jour</button>          <button @click="switchModeEdition">Annuler</button>        </span>      </div>    ',methods:{}},r={props:[],data:function(){return{currentDateTime:""}},mounted(){},template:'    <h1>Création d\'une recettes</h1>    <p>Remplissez les champs suivant et validez quand votre recette sera complète</p>          <p><button @click="setModeListe">Retour à la liste de recettes</button></p>      <div>        <table>        \x3c!--tr>          <td>index</td>          <td>{{indexRecette}}</td>        </tr--\x3e        <tr>          <td>titre</td>          <td>{{titre}}</td>        </tr>        <tr>          <td>type</td>          <td>{{typeRecette}}</td>        </tr>          <tr>            <td>description</td>            <td>{{description}}</td>          </tr>          <tr>            <td >ingredients</td>            <td >              <thead>                <th>nom</th>                <th>quantité</th>                <th>unité</th>              </thead>                <tr v-for="ingredient in ingredients">                  <td>                    {{ingredient.nom}}                  </td>                  <td>                    {{ingredient.quantite}}                  </td>                  <td>                    {{ingredient.unite}}                  </td>              </tr>            </td>          </tr>          <tr>            <td>realisation</td>            <td>{{realisation}}</td>          </tr>        </table>        <span v-if="modeEdition">          <button @click="updateRecette">Mise a jour</button>          <button @click="switchModeEdition">Annuler</button>        </span>      </div>    ',methods:{}},{createApp:a}=Vue,p=a({data:()=>({page:"home",connected:!1,copyright:"Bruno Froger (c) depuis 2024",isAdmin:!1,currentDateTime:""}),mounted(){this.updateTypeUser(),this.updateDateTime(),setInterval(this.updateDateTime,1e3)},template:'        <div class="entete">          <table>            <tr>              <td><a href="#" @click.prevent="page=\'home\'">Acceuil</a></td>              <td><a href="#" @click.prevent="page=\'recettes\'">Recettes</a></td>              <td><a href="#" @click.prevent="page=\'compte\'">Mon compte</a></td>              <td v-if="isAdmin"><a href="#" @click.prevent="page=\'admin\'">Admin</a></td>              <td>{{currentDateTime}}</td>            </tr>          </table>        </div>        <div>        <span @load="updateTypeUser"></span>          <component v-bind:is="page"></component>        </div>        <div class="piedPage">          <i>Créé par : {{copyright}}</i>        </div>      ',methods:{updateTypeUser(){this.isAdmin=i.methods.isAdmin(),console.log("isAdmin : "+this.isAdmin)},updateDateTime(){const e=new Date;this.currentDateTime=e.toLocaleString()}}});p.component("home",e),p.component("recettes",s),p.component("compte",i),p.component("listeRecettes",o),p.component("afficheRecette",d),p.component("editeRecette",c),p.component("creationRecette",r),p.mount("#app")})();